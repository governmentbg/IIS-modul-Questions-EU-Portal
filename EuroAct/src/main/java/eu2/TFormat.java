//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.02 at 01:52:08 PM EEST 
//


package eu2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for t_format.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="t_format"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="DOC"/&gt;
 *     &lt;enumeration value="DOCX"/&gt;
 *     &lt;enumeration value="PDF"/&gt;
 *     &lt;enumeration value="PDFA1A"/&gt;
 *     &lt;enumeration value="PDFA1B"/&gt;
 *     &lt;enumeration value="PDFX"/&gt;
 *     &lt;enumeration value="PPSX"/&gt;
 *     &lt;enumeration value="PPT"/&gt;
 *     &lt;enumeration value="PPTX"/&gt;
 *     &lt;enumeration value="XLS"/&gt;
 *     &lt;enumeration value="XLSX"/&gt;
 *     &lt;enumeration value="XML"/&gt;
 *     &lt;enumeration value="ZIP"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "t_format", namespace = "http://publications.europa.eu/resource/formats/")
@XmlEnum
public enum TFormat {

    DOC("DOC"),
    DOCX("DOCX"),
    PDF("PDF"),
    @XmlEnumValue("PDFA1A")
    PDFA_1_A("PDFA1A"),
    @XmlEnumValue("PDFA1B")
    PDFA_1_B("PDFA1B"),
    PDFX("PDFX"),
    PPSX("PPSX"),
    PPT("PPT"),
    PPTX("PPTX"),
    XLS("XLS"),
    XLSX("XLSX"),
    XML("XML"),
    ZIP("ZIP");
    private final String value;

    TFormat(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TFormat fromValue(String v) {
        for (TFormat c: TFormat.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
